#!/bin/zsh

_update_nvim() {
    # If a previous installation of nvim exists, remove it.
    if [ -f "$HOME/.local/bin/nvim" ]; then
        rm -R "$HOME/.local/bin/nvim"
    fi

    curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim-linux-x86_64.appimage
    chmod u+x nvim-linux-x86_64.appimage
    mv nvim-linux-x86_64.appimage "$HOME/.local/bin/nvim"
}

_update_neovide() {
    # If a previous version of neovide exists, remove it.
    if [ -f "$HOME/.local/bin/neovide" ]; then
        rm -R "$HOME/.local/bin/neovide"
    fi

    curl -LO https://github.com/neovide/neovide/releases/latest/download/neovide.appimage
    chmod u+x neovide.appimage
    mv neovide.appimage "$HOME/.local/bin/neovide"
}

_update_delta() {
    if command -v delta &> /dev/null; then
        rm -R "$HOME/.local/bin/delta"
    fi

    curl -s "https://api.github.com/repos/dandavison/delta/releases/latest" \
        | grep "git-delta_.*_amd64" \
        | cut -d : -f 2,3 \
        | tr -d \" \
        | tail -n 1 \
        | wget -qi - -O delta.deb

    dpkg -x "delta.deb" delta
    mv delta/usr/bin/delta "$HOME/.local/bin"
    rm "delta.deb"
    rm -rf delta
}

_update_fzf() {
    if [ -f "$HOME/.local/bin/fzf" ]; then
        rm -R "$HOME/.local/bin/fzf"
    fi

    curl -s "https://api.github.com/repos/junegunn/fzf/releases/latest" \
        | grep "linux_amd64" \
        | cut -d : -f 2,3 \
        | tr -d \" \
        | tail -n 1 \
        | wget -qi - -O fzf.tar.gz
    tar -xzf "fzf.tar.gz"
    mv fzf "$HOME/.local/bin"
    rm "fzf.tar.gz"
}

_update_stylua() {
    if [ -f "$HOME/.local/bin/stylua" ]; then
        rm "$HOME/.local/bin/stylua"
    fi

    curl -LO https://github.com/JohnnyMorganz/StyLua/releases/latest/download/stylua-linux-x86_64.zip
    unzip stylua-linux-x86_64.zip -d "$HOME/.local/bin/"
    rm stylua-linux-x86_64.zip
}

local cur_os=$(uname)
if [[ "$cur_os" == "Linux" ]]; then
    local -r app=${1:?"error: no app to update has been specified"}

    case $app in
        nvim) _update_nvim;;
        neovide) _update_neovide;;
        delta) _update_delta;;
        fzf) _update_fzf;;
        *) echo "Unknown app name";;
    esac
else
    echo "The update command is for Linux systems only."
    echo "For Windows, please use scoop install/update."
    echo "For macOS, please use brew install/update."
fi
