#!/bin/zsh

local -r app=${1:?"error: no app to update has been specified"}

update_nvim() {
    if [[ "$OSTYPE" == "msys" ]]; then
        if ! command -v nvim &> /dev/null; then
            scoop install main/neovim
            return
        else
            scoop update neovim
        fi
        return
    fi

    # If a previous installation of nvim exists, remove it.
    if [ -f "$HOME/.local/bin/nvim" ]; then
        rm -R "$HOME/.local/bin/nvim"
    fi

    curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim.appimage
    chmod u+x nvim.appimage
    mv nvim.appimage "$HOME/.local/bin/nvim"
}

update_delta() {
    if [[ "$OSTYPE" == "msys" ]]; then
        if ! command -v delta &> /dev/null; then
            scoop install main/delta
            return
        else
            scoop update delta
        fi
        return
    fi

    local -r version=${1:?"error: a version number is required"}

    if command -v delta &> /dev/null; then
        sudo dpkg -r git-delta
    fi

    curl -LO "https://github.com/dandavison/delta/releases/download/${version}/git-delta_${version}_amd64.deb"
    sudo dpkg -i "git-delta_${version}_amd64.deb"
    rm "git-delta_${version}_amd64.deb"
}

update_fzf() {
    cwd=$(pwd)
    cd "$FZF_PATH"
    git checkout master > /dev/null 2>&1
    git fetch --tags > /dev/null
    tag=$(git describe --tags "$(git rev-list --tags --max-count=1)")
    echo "Updating to version $tag"
    git checkout $tag > /dev/null 2>&1
    cd "$cwd"

    $FZF_PATH/install --bin
}

update_stylua() {
    if [[ "$OSTYPE" == "msys" ]]; then
        if ! command -v stylua &> /dev/null; then
            scoop install main/stylua
            return
        else
            scoop update stylua
        fi
        return
    fi

    if [ -f "$HOME/.local/bin/stylua" ]; then
        rm "$HOME/.local/bin/stylua"
    fi

    curl -LO https://github.com/JohnnyMorganz/StyLua/releases/latest/download/stylua-linux-x86_64.zip
    unzip stylua-linux-x86_64.zip -d "$HOME/.local/bin/"
    rm stylua-linux-x86_64.zip
}

if [[ "${app}" == "nvim" ]]; then
    update_nvim
elif [[ "${app}" == "delta" ]]; then
    update_delta ${2}
elif [[ "${app}" == "fzf" ]]; then
    update_fzf
elif [[ "${app}" == "stylua" ]]; then
    update_stylua
fi
