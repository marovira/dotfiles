# Export variables.
export EDITOR='nvim'
export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"
export COLUMNS
export FZF_PREVIEW_COLUMNS

# Forgit exports
export FORGIT_NO_ALIASES=1

# For some reason, it seems that enabling zsh in newer versions of git bash will set
# OSTYPE to be cygwin instead of msys2. Since I'm not entirely sure what will happen if I
# attempt to override that flag, instead I'm making a new flag to denote Windows systems
# so everything continues working as it should.
if [[ "$OSTYPE" == "msys" || "$OSTYPE" == "cygwin" ]]; then
    IS_WIN=1
else
    IS_WIN=0
fi

if [[ "$OSTYPE" == "darwin"* ]]; then
    IS_DARWIN=1
else
    IS_DARWIN=0
fi

if [[ "$IS_WIN" == 1 ]]; then
    unset SHELL
fi

# Load compinit for Windows (msys) and OSX since they don't enable it by default
if [[ "$IS_WIN" == 1 || "$OSTYPE" == "darwin"* ]]; then
    autoload -Uz compinit
    compinit
fi

# Install antidote if necessary
ANTIDOTE=~/.antidote
if [ ! -d $ANTIDOTE ]; then
    echo "Downloading antidote"
    git clone --depth=1 https://github.com/mattmc3/antidote.git $ANTIDOTE
fi

source $ANTIDOTE/antidote.zsh

antidote load

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi


# Vim aliases.
alias vi='nvim'
alias vim='nvim'

# On Windows only, override neovide so it opens with the size we want. Also it seems the
# latest version of Neovide has an issue with forking correctly on git bash, so ensure it
# doesn't block the terminal when started.
if [[ "$IS_WIN" == 1 ]]; then
    alias neovide='(neovide --grid 100x50 &)'
fi

# On macOS only, ensure that python3 gets overwritten to the location of the version we
# install with homebrew.
if [[ "$IS_DARWIN" == 1 ]]; then
    alias python3=/opt/homebrew/bin/python3
fi

# Grep aliases
alias grep='grep --color'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

# Emulates Apple's open. Only applies to Linux (linux-gnu) and Windows (msys).
if [[ "$OSTYPE" == "linux-gnu" ]]; then
    alias open='xdg-open'
elif [[ "$IS_WIN" == 1 ]]; then
    alias open='start'
fi

# Allow Windows to open bash without any settings. This is mainly to address an issue
# where certain paths don't work in zsh.
if [[ "$IS_WIN" == 1 ]]; then
    alias bash='bash --norc --noprofile'
fi

# Directory listings.
alias ls='ls -1 -hF --color=auto'
alias la='ls -A'

# rsync alias
alias rsync='rsync -aP'

bindkey '^[[Z' autosuggest-accept

export LS_COLORS="$LS_COLORS:ow=1;34:tw=1;34:"

# Automatically load all zshfn files.
fpath+=(~/.zshfn)
autoload -U $fpath[-1]/*(.:t)

# Add forgit to path for completions
fpath+=($FORGIT_INSTALL_DIR/completions/_git-forgit)
autoload -U $FORGIT_INSTALL_DIR/completions/_git-forgit

# Add UV completions (if it exists)
if type "uv" > /dev/null; then
    eval "$(uv generate-shell-completion zsh)"
    eval "$(uvx --generate-shell-completion zsh)"

    # Fix completions for uv run.
    _uv_run_mod() {
        if [[ "$words[2]" == "run" && "$words[CURRENT]" != -* ]]; then
            _arguments '*:filename:_files'
        else
            _uv "$@"
        fi
    }
    compdef _uv_run_mod uv
fi

PATH="$PATH:$FORGIT_INSTALL_DIR/bin"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

if [[ "$IS_WIN" == 1 ]]; then
    keep_current_path() {
        # printf "\e]9;9;%s\e\\" "$(cygpath -w "$PWD")"
        printf "\033]7;file//$HOST/$PWD\033\\"
    }
    precmd_functions+=(keep_current_path)
fi
